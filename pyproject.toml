[build-system]
requires = [
    "setuptools>=70.0.0",
    "wheel",
    "build",
    "setuptools_scm>=8",
    "click",
    "pluggy",
]
build-backend = "_req_links.backend"
backend-path = [
    ".",
    "src",
]

[project]
name = "drain-swamp"
dynamic = [
    "optional-dependencies",
    "dependencies",
    "version",
]
license = {file = "LICENSE"}
description = "Python build backend with build plugins and dependency lock switch"
keywords = ["pipenv", "pip", "pip-tools", "dependency lock"]
readme = "README.rst"
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Topic :: Software Development :: Build Tools",
    "Typing :: Typed",
    "Operating System :: POSIX :: Linux",
]
# Contact by mastodon please
authors = [
    {name = "Dave Faulkmore", email = "faulkmore@protonmail.com"},
]

[project.urls]
"Documentation" = "https://msftcangoblowm.github.io/drain-swamp"
"Docs (rtd)" = "https://drain-swamp.readthedocs.io/en/stable"
Changes = "https://raw.githubusercontent.com/msftcangoblowm/drain-swamp/master/CHANGES.rst"
"PyPI Releases" = "https://pypi.org/project/drain-swamp"
"Source code" = "https://github.com/msftcangoblowm/drain-swamp"
"Issue tracker" = "https://github.com/msftcangoblowm/drain-swamp/issues"
Chat = "https://mastodon.social/@msftcangoblowme"

[tool.setuptools.packages.find]
where = ["src"]
include = ["drain_swamp*"]

[project.entry-points."setuptools.finalize_distribution_options"]
# get scm version (current)
# :code:`drain-swamp current`
# Replaces: :code:`python -m setuptools_scm`
# Wraps setuptools_scm, get scm version
# - Do not require section: tool.setuptools_scm
# - Use sections: tool.pipenv-unlock or tool.drain-swamp
drain_swamp = "drain_swamp.monkey.wrap_infer_version:infer_version"

[project.entry-points."distutils.setup_keywords"]
# No need for setup.py
use_scm_version = "drain_swamp.monkey.wrap_version_keyword:version_keyword"

[project.scripts]
pipenv-unlock = "drain_swamp.cli_unlock:main"
drain-swamp = "drain_swamp.cli_igor:main"
scm-version = "drain_swamp.cli_scm_version:main"

[tool.setuptools.dynamic]
# @@@ editable little_shop_of_horrors_shrine_candles
dependencies = { file = ["requirements/prod.lnk"] }
optional-dependencies.pip = { file = ["requirements/pip.lnk"] }
optional-dependencies.pip_tools = { file = ["requirements/pip-tools.lnk"] }
optional-dependencies.dev = { file = ["requirements/dev.lnk"] }
optional-dependencies.manage = { file = ["requirements/manage.lnk"] }
optional-dependencies.docs = { file = ["docs/requirements.lnk"] }
# @@@ end

version = {attr = "drain_swamp._version.__version__"}

[tool.pipenv-unlock]
wraps-build-backend = "setuptools.build_meta"
version_file = "src/drain_swamp/_version.py"
folders = [
    "docs",
    "requirements",
]

# target contains: alphanumeric+underscore
# relative path file stem contains: alphanumeric+hyphen
required = { target = "prod", relative_path = "requirements/prod.in" }

# target contains: alphanumeric+underscore
# relative path file stem contains: alphanumeric+hyphen
optionals = [
    { target = "pip", relative_path = "requirements/pip.in" },
    { target = "pip_tools", relative_path = "requirements/pip-tools.in" },
    { target = "dev", relative_path = "requirements/dev.in" },
    { target = "manage", relative_path = "requirements/manage.in" },
    { target = "docs", relative_path = "docs/requirements.in" },
]

[tool.drain-swamp]
copyright_start_year = 2024

[tool.pip-tools]
no_header = true
resolver = "backtracking"
no_allow_unsafe = true
generate_hashes = false  # From setuptools 69.0.2, parsing dependencies with hashes is broken

# ################################################
# PREVENT setuptools-scm FROM RUNNING BUILD HOOKS
# ################################################
# [tool.setuptools_scm]
# SETUPTOOLS_SCM_PRETEND_VERSION_FOR_DRAIN_SWAMP="1.0.2" python -m setuptools_scm
# fallback_version = "1.0.2"
# version_file = "src/drain_swamp/_version.py"

[tool.mypy]
mypy_path = "src"
exclude = ['tests', 'docs']
strict = true
namespace_packages = true
check_untyped_defs = true
warn_unused_ignores = false  # events.pyi :38 and :43
no_implicit_optional = true
show_error_codes = true
warn_redundant_casts = true
strict_equality = true

[[tool.mypy.overrides]]
module = ["docutils.*", "setuptools_scm.*"]
ignore_missing_imports = true

[tool.coverage.run]
source_pkgs = ["drain_swamp"] # **REQUIRED** to be set correctly. Your package name
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "@abc.abstractmethod",
    "@abc.abstractproperty",
    "if TYPE_CHECKING:",
    "if typing.TYPE_CHECKING:",
]
precision = 2
ignore_errors = true
skip_covered = true
skip_empty = true
fail_under = 70
show_missing = true

[tool.sphinx-pyproject]
language = "en"
needs_sphinx = "1.7"
templates_path = ["_templates",]
html_static_path = ["_static",]
html_css_files = ["css/custom.css",]
# https://www.sphinx-doc.org/en/master/usage/markdown.html
source_suffix = [".md", ".rst"]
master_doc = "index"
pygments_style = "sphinx"
html_theme = "alabaster"
numfig = true
autosectionlabel_prefix_document = true
extensions = [
    "sphinx.ext.autodoc",
    "sphinx.ext.autosectionlabel",
    "sphinx.ext.todo",
    "sphinx.ext.doctest",
    "sphinx_paramlinks",
    "sphinx.ext.intersphinx",
    "sphinx.ext.extlinks",
    "sphinx_external_toc_strict",
    "myst_parser",
    "sphinx_copybutton",
    "sphinx_design",
    "sphinx_tabs.tabs",
    "sphinx_favicon",
]
linkcheck_ignore = [
    "https://github.com/crdoconnor/strictyaml/blob/dfd93f9740ebd5e7150029bc3d89ea102bcddf00/strictyaml/representation.py#L48",
    "https://github.com/crdoconnor/strictyaml/blob/dfd93f9740ebd5e7150029bc3d89ea102bcddf00/strictyaml/representation.py#L114",
    "https://github.com/PyCQA/flake8/blob/fb9a02aaf77b56fcad4320971e7edca0cea93489/src/flake8/options/config.py#L56",
    "https://github.com/psf/black/blob/ea66d40dd7f1eaa20256e6fccaf6d7b853ccc541/src/black/files.py#L57",
    "https://github.com/csachs/pyproject-flake8/blob/16b9dd4d2f19dcf0bfb3a3110f98227627cd67fe/pflake8/__init__.py#L22",
    "https://github.com/csachs/pyproject-flake8/blob/16b9dd4d2f19dcf0bfb3a3110f98227627cd67fe/pflake8/__init__.py#L86",
    "https://github.com/executablebooks/sphinx-external-toc/#development-notes",
    "https://stackoverflow.com/a/32190021",
    "https://github.com/python/cpython/blob/bac277f1dd1f1895ee54a0ae4bf11cf1f2dc5ac2/Modules/_abc.c#L279",
    "https://github.com/python/cpython/blob/ca2275025bf25427758bc5d7adecc0455068f1e9/Lib/dataclasses.py#L268",
    "https://github.com/python/cpython/blob/8edfa0b0b4ae4235bb3262d952c23e7581516d4f/Lib/os.py#L701",
    "https://github.com/pypa/setuptools/blob/4147b093d0aea4f57757c699a0b25bbc3aab2580/setuptools/dist.py#L204",
    "https://github.com/pypa/setuptools/blob/e9f0be98ea4faaba4a7b2d07ba994a81fde8f42f/setuptools/build_meta.py#L161",
]
myst_enable_extensions = ["colon_fence", "html_image"]
external_toc_exclude_missing = true
todo_include_todos = true

exclude_patterns = [
    "_build",
    "Thumbs.db",
    ".DS_Store",
]
doctest_show_successes = false
doctest_test_doctest_blocks = "Yes please!"
nitpicky = true
autodoc_typehints = 'signature'

[tool.black]
include = '\.pyi?$'
extend-exclude = '''(src/drain_swamp/\_version.py)'''

[tool.blackdoc]
skip_string_normalization = true
color = false  # affects diffs only

[tool.isort]
profile = "black"
multi_line_output = 3
force_grid_wrap = 2
use_parentheses = true
include_trailing_comma = true
ensure_newline_before_comments = true
line_length = 88
supported_extensions = ["py", "pyi"]
skip = [
    "src/drain_swamp/_version.py",
]

[tool.flake8]
max_line_length = 88
# E301, E302 for .pyi files, flake-pyi conflicts with black
extend_ignore = [
    "E704",
    "E203",
    "W503",
    "W605",
    "W293",
    "W291",
    "E301",
    "E302",
    "E501",
]
exclude = [
    "src/drain_swamp/_version.py",
]

[tool.twine]
sign = true

[tool.pytest.ini_options]
filterwarnings = [
    "ignore::DeprecationWarning:myst_parser.*:",
    "ignore::DeprecationWarning:optparse.*:",
]
log_format = "%(asctime)s %(levelname)s %(message)s"
log_date_format = "%Y-%m-%d %H:%M:%S"
