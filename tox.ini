# To use tox, see https://tox.readthedocs.io
# Simply pip or conda install tox
# If you use conda, you may also want to install tox-conda
# then run `tox` or `tox -- {pytest args}`
# run in parallel using `tox -p`
[tox]
envlist = py{py3,39,310,311,312,313,314},docs,lint,mypy
toxworkdir = {env:TOXWORKDIR:.tox}

[testenv]
usedevelop = False
download = True
extras =
    toml
deps =
    -r requirements/pip.lnk

# Windows can't update the pip version with pip running, so use Python
# to install things.
install_command = python -m pip install -U {opts} {packages}

passenv = *
setenv =
    #PYTHONWARNINGS=ignore:removed in Python 3.14; use ast.Constant:DeprecationWarning
    # Disable CPython's color output
    PYTHON_COLORS=0
    TOXINIDIR = {toxinidir}
    DS_CONFIG_SETTINGS={temp_dir}/setuptools-build.toml

allowlist_externals = cat

# tox not recognizing config_settings passed via cli
# python -m build -C--kind="tag" -C--set-lock="0"
commands_pre =
    python -c 'from pathlib import Path; txt="[project]\nname = \"whatever\"\nversion = \"0.0.1\"\n\n[tool.config-settings]\nkind=\"tag\"\nset-lock=\"0\"\n"; p=Path("{env:DS_CONFIG_SETTINGS}"); p.write_text(txt)'

commands =
    python -m build
    python -m pip install --disable-pip-version-check -q .

[testenv:docs]
description = sphinx docs
# One of the PYVERSIONS, that's currently supported by Sphinx. Make sure it
# matches the `python:version:` in the .readthedocs.yml file, and the
# python-version in the `doc` job in the .github/workflows/quality.yml workflow.
basepython = python3.9

# Build the docs so we know if they are successful.  We build twice: once with
# -q to get all warnings, and once with -QW to get a success/fail status
# return.
deps =
    -r docs/requirements.lnk
allowlist_externals =
    make
# https://tox.wiki/en/latest/faq.html#building-documentation-with-sphinx
commands =
    sphinx-build -d "{envtmpdir}{/}doctree" -b html -aEnqW docs "{toxworkdir}{/}docs_out"
    rst2html.py --strict README.rst "{toxworkdir}{/}trash"
    -sphinx-build -d "{envtmpdir}{/}doctree" -b html -b linkcheck -aEnq docs "{toxworkdir}{/}docs_out"
    -sphinx-build -d "{envtmpdir}{/}doctree" -b html -b linkcheck -aEnQW docs "{toxworkdir}{/}docs_out"
    python -c 'print(r"documentation available under file://{toxworkdir}{/}docs_out{/}index.html")'

[testenv:lint]
description = pre-commit and build
# Minimum of PYVERSIONS
basepython = python3.9
deps =
    -r requirements/dev.lnk
setenv =
    {[testenv]setenv}
commands =
    validate-pyproject pyproject.toml
    python -m isort --profile="black" --multi-line=3 --force-grid-wrap=2 --use-parentheses --trailing-comma --ensure-newline-before-comments --line-length=88 --supported-extension="py,pyi" src/
    python -m isort --profile="black" --multi-line=3 --force-grid-wrap=2 --use-parentheses --trailing-comma --ensure-newline-before-comments --line-length=88 --supported-extension="py,pyi" tests/
    python -m isort --profile="black" --multi-line=3 --force-grid-wrap=2 --use-parentheses --trailing-comma --ensure-newline-before-comments --line-length=88 --supported-extension="py,pyi" integration/
    python -m flake8 --max-line-length=88 --extend-ignore="E704,E203,W503,W605,W293,W291,E301,E302,E501" src/
    python -m flake8 --max-line-length=88 --extend-ignore="E704,E203,W503,W605,W293,W291,E301,E302,E501" tests/
    python -m flake8 --max-line-length=88 --extend-ignore="E704,E203,W503,W605,W293,W291,E301,E302,E501" integration/
    python -m black --quiet --include='\.pyi?$' src/
    python -m black --quiet --include='\.pyi?$' tests/
    python -m black --quiet --include='\.pyi?$' integration/
    # Within a runner, have no access to dist/ folder nor contents. Skip, `twine check`

[testenv:mypy]
description = static type checking
basepython = python3.9
deps =
    -r requirements/mypy.lnk
setenv =
    {[testenv]setenv}
commands =
    mypy --python-version=3.9 -p drain_swamp

[testenv:pre-commit]
description = Run pre-commit
skip_install = true
deps =
    -r requirements/manage.lnk
setenv =
    {[testenv]setenv}

commands =
    pre-commit run --all-files --show-diff-on-failure

[gh]
# https://pypi.org/project/tox-gh/
# PYVERSIONS
python =
    3.9 = py39
    3.10 = py310
    3.11 = py311
    3.12 = py312
    3.13 = py313
    3.14 = py314
    pypy-3 = pypy3
