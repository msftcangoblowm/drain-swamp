# Licensed under the Apache License: http://www.apache.org/licenses/LICENSE-2.0
# For details: https://github.com/nedbat/coveragepy/blob/master/NOTICE.txt

name: "Python Nightly Tests"

on:
  push:
    branches:
      - "**/*nightly*"
  schedule:
    # Run at 2:22am early every morning Eastern time (6/7:22 UTC)
    # so that we get tips of CPython development tested.
    # https://crontab.guru/#22_7_%2a_%2a_%2a
    - cron: "22 7 * * *"
  workflow_dispatch:

defaults:
  run:
    shell: bash

env:
  PIP_DISABLE_PIP_VERSION_CHECK: 1
  LOCK_SUFFIX: ${{ vars.DRAINSWAMP_SET_LOCK == '1' && '.lock' || '.unlock' }}

permissions:
  contents: read

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  tests:
    name: "${{ matrix.python-version }}"
    # Choose a recent Ubuntu that deadsnakes still builds all the versions for.
    # For example, deadsnakes doesn't provide 3.10 nightly for 22.04 (jammy)
    # because jammy ships 3.10, and deadsnakes doesn't want to clobber it.
    # https://launchpad.net/~deadsnakes/+archive/ubuntu/nightly/+packages
    # https://github.com/deadsnakes/issues/issues/234
    # bionic: 18, focal: 20, jammy: 22
    runs-on: ubuntu-20.04
    # If it doesn't finish in an hour, it's not going to. Don't spin for six
    # hours needlessly.
    timeout-minutes: 60

    strategy:
      matrix:
        python-version:
          # When changing this list, be sure to check the [gh] list in
          # tox.ini so that tox will run properly. PYVERSIONS
          # Available versions:
          # https://launchpad.net/~deadsnakes/+archive/ubuntu/nightly/+packages
          - "3.12-dev"
          - "3.13-dev"
          # https://github.com/actions/setup-python#available-versions-of-pypy
          - "pypy-3.9-nightly"
          - "pypy-3.10-nightly"
      fail-fast: false

    steps:
      - name: "Check out the repo"
        uses: "actions/checkout@v4"

      - name: Get latest tag
        id: vars
        run: |
          echo "tag=$(git describe --tags)" >> $GITHUB_OUTPUT

      - name: "Install ${{ matrix.python-version }} with deadsnakes"
        uses: deadsnakes/action@6c8b9b82fe0b4344f4b98f2775fcc395df45e494
        if: "!startsWith(matrix.python-version, 'pypy-')"
        with:
          python-version: "${{ matrix.python-version }}"

      - name: "Install ${{ matrix.python-version }} with setup-python"
        uses: "actions/setup-python@v5"
        if: "startsWith(matrix.python-version, 'pypy-')"
        with:
          python-version: "${{ matrix.python-version }}"

      - name: "Show diagnostic info"
        run: |
          set -xe
          python -VV
          python -m site
          env

      - name: "Install dependencies -- tests"
        run: |
          python -m pip install -r requirements/tox$LOCK_SUFFIX
          python -m pip install -r requirements/prod$LOCK_SUFFIX

      - name: "Install dependencies -- build"
        run: |
          python -m pip install -r requirements/kit$LOCK_SUFFIX

      - name: build
        env:
          RELEASE_VERSION: ${{ steps.vars.outputs.tag }}
          SET_LOCK: ${{ vars.DRAINSWAMP_SET_LOCK }}
        run: |
          echo "python -m build -C--kind=$RELEASE_VERSION -C--set-lock=$SET_LOCK"
          python -m build -C--kind="$RELEASE_VERSION" -C--set-lock="$SET_LOCK"

      - name: "Run tox"
        run: |
          python -m tox -c tox-test.ini -- -rfsEX
