# Licensed under the AGPLv3+ License: https://www.gnu.org/licenses/
# For details: https://github.com/msftcangoblowm/drain-swamp/blob/master/NOTICE.txt
#
# https://github.com/codecov/codecov-action
# https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/about-security-hardening-with-openid-connect

name: "Codecov"

on:
  push:
    branches:
      - master
      - msftcangoblowm/*
  pull_request:
  workflow_dispatch:

defaults:
  run:
    shell: bash

env:
  PIP_DISABLE_PIP_VERSION_CHECK: 1
  COVERAGE_IGOR_VERBOSE: 1
  FORCE_COLOR: 1    # Get colored test output
  LOCK_SUFFIX: ${{ vars.DRAINSWAMP_SET_LOCK == '1' && '.lock' || '.unlock' }}

permissions:
  contents: write

concurrency:
  group: >-
    ${{ github.workflow }}-${{ github.ref_type }}-
    ${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  codecov:
    name: "${{ matrix.python-version }} on ${{ matrix.os }}"
    runs-on: "${{ matrix.os }}-latest"
    # Don't run tests if the branch name includes "-notests"
    if: "!contains(github.ref, '-notests')"
    strategy:
      matrix:
        os:
          - ubuntu
        python-version:
          - "3.9"
      fail-fast: false
    steps:
    - id: prepare-config-settings
      name: >-
        Build Plugin parameters
      uses: 'msftcangoblowm/drain-swamp-action@v1'
      env:
        SET_LOCK: ${{ vars.DRAINSWAMP_SET_LOCK }}
      with:
        plugin_parameters: '{"set-lock": "${{ env.SET_LOCK }}", "kind": "current"}'
        checkout: true
        fetch_tags: true
        python_version: "${{ matrix.python-version }}"

    - name: "Download artifact"
      uses: actions/download-artifact@v4
      with:
        name: config-settings-${{ matrix.os }}-${{ matrix.python-version }}
        path: '${{ runner.temp }}'

    - name: "Check out the repo"
      uses: actions/checkout@6d193bf28034eafb982f37bd894289fe649468fc # v4.1.7
      repository: msftcangoblowm/drain-swamp
      with:
        # fetch all branches and tags instead of only fetching the ref/SHA that triggered the workflow
        fetch-depth: 0

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5.2.0
      with:
        python-version: "${{ matrix.python-version }}"
        # cache: pip
        # cache-dependency-path: |
        #   requirements/*${{ env.LOCK_SUFFIX }}
        allow-prereleases: true
    - name: "Install dependencies"
      run: |
        set -xe
        python -m pip install -r requirements/kit$LOCK_SUFFIX
        python -m pip install -r requirements/prod$LOCK_SUFFIX
        python -m pip install -r requirements/dev$LOCK_SUFFIX
    - name: "Build sdist and whl"
      run: |
        # TOML file location ${{ runner.temp }}/${{ steps.outcome.inputs.toml_file_name }}
        # env.DS_CONFIG_SETTINGS contains (OS independent) path to TOML file
        python -m build
    - name: "Install"
      run: |
        set -xe
        python -m pip install --disable-pip-version-check -q .
    # integration/ does not contribute to coverage
    - name: "Run coverage"
      run : |
        set -xe
        pytest --showlocals --quiet --cov=drain_swamp --cov-report=xml --cov-config=pyproject.toml tests
    - name: "Upload to Codecov"
      uses: codecov/codecov-action@2296b6ba9eee85301a5ef2c7c2cdc738faf1f939 # 4.5.0
      with:
        name: unittest-py${{ matrix.python-version }}
        token: ${{ secrets.CODECOV_TOKEN }}
        slug: msftcangoblowm/drain-swamp
        os: linux
        flags: unittests
        file: ./coverage.xml
        env_vars: OS,PYTHON
        fail_ci_if_error: true
        verbose: true
