# Licensed under the AGPLv3+ License: https://www.gnu.org/licenses/
# For details: https://github.com/msftcangoblowm/drain-swamp/blob/master/NOTICE.txt
# https://github.com/pyscaffold/pyscaffold/blob/master/src/pyscaffold/templates/github_ci_workflow.template
# https://docs.github.com/en/actions/using-workflows/storing-workflow-data-as-artifacts#passing-data-between-jobs-in-a-workflow

name: "Quality"

on:
  push:
    branches:
      - master
      - msftcangoblowm/*
  pull_request:
  workflow_dispatch:

defaults:
  run:
    shell: bash

env:
  PIP_DISABLE_PIP_VERSION_CHECK: 1
  LOCK_SUFFIX: ${{ vars.DRAINSWAMP_SET_LOCK == '1' && '.lock' || '.unlock' }}

permissions:
  contents: read

concurrency:
  group: >-
    ${{ github.workflow }}-${{ github.ref_type }}-
    ${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  get-toml:
    name: "Get config-settings"

    runs-on: "${{ matrix.os }}"
    strategy:
      matrix:
        os:
          - ubuntu-latest
        python-version:
          - "3.9"
      fail-fast: false
    outputs:
      config_settings: '${{ steps.config-settings-output.outputs.config_settings }}'

    steps:
    - id: prepare-config-settings
      name: >-
        Build Plugin parameters
      uses: 'msftcangoblowm/drain-swamp-action@v1'
      with:
        plugin_parameters: '{"set-lock": "${{ vars.DRAINSWAMP_SET_LOCK }}", "kind": "current"}'
        checkout: true
        python_version: "${{ matrix.python-version }}"

    - name: Download artifact
      uses: actions/download-artifact@v4.1.8
      with:
        name: config-settings-${{ matrix.os }}-${{ matrix.python-version }}
        path: '${{ runner.temp }}'

    - name: Trans jobs artifact -- upload
      uses: actions/upload-artifact@v4.4.0
      with:
          name: config-settings-toml-${{ matrix.os }}-${{ matrix.python-version }}
          path: '${{ env.DS_CONFIG_SETTINGS }}'
          retention-days: 1
          if-no-files-found: error

    - id: config-settings-output
      name: Trans jobs -- DS_CONFIG_SETTINGS --> outputs
      shell: bash
      run: |
        echo 'config_settings=${{ env.DS_CONFIG_SETTINGS }}' >> "$GITHUB_OUTPUT"

  lint:
    name: "isort black flake8 etc"
    needs:
      get-toml

    runs-on: "${{ matrix.os }}"
    strategy:
      matrix:
        os:
          - ubuntu-latest
        python-version:
          - "3.9"
      fail-fast: false

    steps:
    - name: Trans jobs artifact -- Download
      uses: actions/download-artifact@v4.1.8
      with:
        name: config-settings-toml-${{ matrix.os }}-${{ matrix.python-version }}
        path: '${{ runner.temp }}'

    - name: Trans jobs -- outputs --> DS_CONFIG_SETTINGS
      shell: bash
      run: |
        echo 'DS_CONFIG_SETTINGS=${{ needs.get-toml.outputs.config_settings }}' >> "$GITHUB_ENV"

    - name: "Check out the repo"
      uses: actions/checkout@6d193bf28034eafb982f37bd894289fe649468fc # v4.1.7
      with:
        repository: '${{ github.repository }}'
        # fetch all branches and tags instead of only fetching the ref/SHA that triggered the workflow
        fetch-depth: 0

    - name: "Install Python"
      uses: actions/setup-python@v5.2.0
      with:
        python-version: "${{ matrix.python-version }}" # Minimum of PYVERSIONS
        # cache: pip
        # cache-dependency-path: |
        #  requirements/*${{ env.LOCK_SUFFIX }}

    - name: "Install dependencies"
      run: |
        python -m pip install -r requirements/tox$LOCK_SUFFIX
        python -m pip install -r requirements/prod$LOCK_SUFFIX
        python -m pip install -r requirements/kit$LOCK_SUFFIX

    # Create generated files: version file and .lnk files. sdist tarball ignored
    - name: "Build sdist to run plugins. Create generated files"
      run: |
        # TOML file location ${{ runner.temp }}/${{ steps.outcome.inputs.toml_file_name }}
        # env.DS_CONFIG_SETTINGS contains (OS independent) path to TOML file
        cat '${{ env.DS_CONFIG_SETTINGS }}'
        python -m build

    - name: "Tox lint"
      run: |
        python -m tox -e lint

  mypy:
    name: "Check types"
    needs:
      get-toml

    runs-on: "${{ matrix.os }}"
    strategy:
      matrix:
        os:
          - ubuntu-latest
        python-version:
          - "3.9"
      fail-fast: false

    steps:
    - name: Trans jobs artifact -- Download
      uses: actions/download-artifact@v4.1.8
      with:
        name: config-settings-toml-${{ matrix.os }}-${{ matrix.python-version }}
        path: '${{ runner.temp }}'

    - name: Trans jobs -- outputs --> DS_CONFIG_SETTINGS
      shell: bash
      run: |
        echo 'DS_CONFIG_SETTINGS=${{ needs.get-toml.outputs.config_settings }}' >> "$GITHUB_ENV"

    - name: "Check out the repo"
      uses: actions/checkout@6d193bf28034eafb982f37bd894289fe649468fc # v4.1.7
      with:
        repository: '${{ github.repository }}'
        # fetch all branches and tags instead of only fetching the ref/SHA that triggered the workflow
        fetch-depth: 0

    - name: "Install Python"
      uses: actions/setup-python@v5.2.0
      with:
        python-version: "${{ matrix.python-version }}" # Minimum of PYVERSIONS, but at least 3.9
        # cache: pip
        # cache-dependency-path: |
        #  requirements/*${{ env.LOCK_SUFFIX }}

    - name: "Install dependencies"
      shell: bash
      run: |
        # Runs on 3.9, but hashes supported by pip-tools is
        # not supported by setuptools. So don't expect hashes
        python -m pip install -r requirements/tox$LOCK_SUFFIX
        python -m pip install -r requirements/prod$LOCK_SUFFIX
        python -m pip install -r requirements/kit$LOCK_SUFFIX

    # Create generated files: version file and .lnk files. sdist tarball ignored
    - name: "Build sdist to run plugins. Create generated files"
      shell: bash
      run: |
        # TOML file location ${{ runner.temp }}/${{ steps.outcome.inputs.toml_file_name }}
        # env.DS_CONFIG_SETTINGS contains (OS independent) path to TOML file
        cat '${{ env.DS_CONFIG_SETTINGS }}'
        python -m build

    - name: "Tox mypy"
      shell: bash
      run: |
        python -m tox -e mypy

  docs:
    name: "Build docs"
    needs:
      get-toml

    runs-on: "${{ matrix.os }}"
    strategy:
      matrix:
        os:
          - ubuntu-latest
        python-version:
          - "3.9"
      fail-fast: false

    concurrency:
      group: docs-${{ github.ref }}
      cancel-in-progress: false  # quality then gh-pages

    steps:
    - name: Trans jobs artifact -- Download
      uses: actions/download-artifact@v4.1.8
      with:
        name: config-settings-toml-${{ matrix.os }}-${{ matrix.python-version }}
        path: '${{ runner.temp }}'

    - name: Trans jobs -- outputs --> DS_CONFIG_SETTINGS
      shell: bash
      run: |
        echo 'DS_CONFIG_SETTINGS=${{ needs.get-toml.outputs.config_settings }}' >> "$GITHUB_ENV"

    - name: "Check out the repo"
      uses: actions/checkout@6d193bf28034eafb982f37bd894289fe649468fc # v4.1.7
      with:
        repository: '${{ github.repository }}'
        # fetch all branches and tags instead of only fetching the ref/SHA that triggered the workflow
        fetch-depth: 0

    - name: "Install Python"
      uses: actions/setup-python@v5.2.0
      with:
        python-version: "${{ matrix.python-version }}" # Doc version from PYVERSIONS
        # cache: pip
        # cache-dependency-path: |
        #  requirements/*${{ env.LOCK_SUFFIX }}

    - name: "Show environment"
      shell: bash
      run: |
        set -xe
        python -VV
        python -m site
        env

    - name: "Install dependencies"
      shell: bash
      run: |
        set -xe
        python -m pip install -r requirements/tox$LOCK_SUFFIX
        python -m pip install -r requirements/prod$LOCK_SUFFIX
        python -m pip install -r requirements/kit$LOCK_SUFFIX

    # Create generated files: version file and .lnk files. sdist tarball ignored
    - name: "Build sdist to run plugins. Create generated files"
      shell: bash
      run: |
        # TOML file location ${{ runner.temp }}/${{ steps.outcome.inputs.toml_file_name }}
        # env.DS_CONFIG_SETTINGS contains (OS independent) path to TOML file
        cat '${{ env.DS_CONFIG_SETTINGS }}'
        python -m build

    - name: "Tox docs"
      run: |
        python -m tox -e docs
