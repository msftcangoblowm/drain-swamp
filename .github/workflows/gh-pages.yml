# Licensed under the AGPLv3+ License: https://www.gnu.org/licenses/
# For details: https://github.com/msftcangoblowm/drain-swamp/blob/master/NOTICE.txt
name: Deploy Sphinx docs to gh pages

on:
  push:
    branches: [$default-branch]
    #tags:
    #  - '*.*.*'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

defaults:
  run:
    shell: bash

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
# https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#concurrency
concurrency:
  group: docs-${{ github.ref }}
  cancel-in-progress: false

env:
  PIP_DISABLE_PIP_VERSION_CHECK: 1
  LOCK_SUFFIX: ${{ vars.DRAINSWAMP_SET_LOCK == '1' && '.lock' || '.unlock' }}

jobs:
  pages:
    name: "publish github pages"
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
    permissions:
      pages: write
      id-token: write
    steps:
    - name: platform set locale
      run: |
        sudo locale-gen en_US.UTF-8
        sudo update-locale

    - name: Checkout the repo
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      with:
        # fetch all branches and tags instead of only fetching the ref/SHA that triggered the workflow
        fetch-depth: 0

    # https://stackoverflow.com/questions/66349002/get-latest-tag-git-describe-tags-when-repo-is-cloned-with-depth-1
    # echo "tag=$(git describe --tags `git rev-list --tags --max-count=1`)" >> $GITHUB_OUTPUT
    - name: Get latest tag
      id: vars
      run: |
        echo "tag=$(git describe --tags)" >> $GITHUB_OUTPUT

    - name: "Install Python"
      uses: actions/setup-python@39cd14951b08e74b54015e9e001cdefcf80e669f # v5.1.1
      with:
        python-version: "3.10" # default of sphinx-notes/pages
        cache: pip
        cache-dependency-path: |
          requirements/*${{ env.LOCK_SUFFIX }}
          docs/requirements${{ env.LOCK_SUFFIX }}

    - name: "Install dependencies for build"
      run: |
        python -m pip install -r requirements/prod$LOCK_SUFFIX
        python -m pip install -r requirements/kit$LOCK_SUFFIX

    # Create generated files: version file and .lnk files. sdist tarball ignored
    - name: "Build sdist to run plugins. Create generated files"
      env:
        SET_LOCK: ${{ vars.DRAINSWAMP_SET_LOCK }}
      run: |
        set -xe
        echo "python -m build -C--kind='current' -C--set-lock='$SET_LOCK'"
        python -m build -C--kind="current" -C--set-lock="$SET_LOCK"

    - name: deploy Sphinx --> Github pages
      id: deployment
      uses: sphinx-notes/pages@3a7b173ecba074b270b37c64007c1edfd8465892  # 3.1 MIT
      with:
        checkout: false
        requirements_path: docs/requirements${{ env.LOCK_SUFFIX }}
        documentation_path: docs  # explicit better than implicit
